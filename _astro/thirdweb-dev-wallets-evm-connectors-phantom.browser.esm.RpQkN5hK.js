import{_ as d,w as u,a as m,c as p,e as l,b as w,f as h,g,R as f,bn as v}from"./Login.kXXM0ZeX.js";import{InjectedConnector as C}from"./thirdweb-dev-wallets-evm-connectors-injected.browser.esm.hOn4tOex.js";import"./index.hfxd0CuE.js";import"./tokens.xGG2VBAi.js";import"./url-bc88b2b6.browser.esm.TxzGMoGi.js";var o=new WeakMap;class U extends C{constructor(t){const n={...{name:"Phantom",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:v},...t.options};super({chains:t.chains,options:n,connectorStorage:t.connectorStorage}),d(this,"id",u.phantom),m(this,o,{writable:!0,value:void 0}),p(this,o,n.UNSTABLE_shimOnConnectSelectAccount)}async connect(){let t=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const e=await this.getProvider();if(!e)throw new l;this.setupListeners(),this.emit("message",{type:"connecting"});let n=null;if(w(this,o)&&this.options?.shimDisconnect&&!this.connectorStorage.getItem(this.shimDisconnectKey)&&(n=await this.getAccount().catch(()=>null),!!n))try{await e.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(a){if(this.isUserRejectedRequestError(a))throw new h(a)}if(!n){const i=await e.request({method:"eth_requestAccounts"});n=g(i[0])}let s=await this.getChainId(),r=this.isChainUnsupported(s);if(t.chainId&&s!==t.chainId)try{await this.switchChain(t.chainId),s=t.chainId,r=this.isChainUnsupported(t.chainId)}catch(i){console.error(`Could not switch to chain id : ${t.chainId}`,i)}this.options?.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const c={chain:{id:s,unsupported:r},provider:e,account:n};return this.emit("connect",c),c}catch(e){throw this.isUserRejectedRequestError(e)?new h(e):e.code===-32002?new f(e):e}}async switchAccount(){await(await this.getProvider()).request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}export{U as PhantomConnector};
