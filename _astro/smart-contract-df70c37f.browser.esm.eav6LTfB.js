import{a as c,S as K,E as $}from"./assertEnabled-55070897.browser.esm.pVBDq614.js";import{d,b as Y,G as Z,C,a as I}from"./contract-appuri-a05d1c9a.browser.esm.HmjD5tla.js";import{B as g,bK as R,bL as h,t as p,bM as F,at as N,bN as z,T as l,ak as S,bO as Q,bP as X,p as A,bQ as D,x as v,bH as J,bR as L,bS as k,bT as O,bU as _,bV as P,bW as tt,bX as et,bY as rt,bZ as at,b_ as B,b$ as j,c0 as G,c1 as nt,bs as U,G as f,g as q,c2 as st,a5 as E,a7 as it,a8 as H,o as ot,q as ct,aP as b,c3 as pt,aq as dt,aA as mt,aC as ut,ay as ht,as as gt,bv as lt,bd as ft,aD as At,ao as yt,Y as wt,Z as Wt,$ as Et}from"./Login.FOoZKC81.js";import{v as V}from"./index.K6drYFfb.js";import{C as St}from"./contract-interceptor-d7b164a7.browser.esm.amNiAGmN.js";import{C as vt,a as Tt}from"./contract-owner-87f50baf.browser.esm.aTkBsPrq.js";import{C as Pt}from"./contract-platform-fee-dbafd1a2.browser.esm.OfGC_5TO.js";import{C as xt}from"./contract-roles-37b20d5a.browser.esm.XPdYvbeT.js";import{C as Ct}from"./contract-sales-5eb82407.browser.esm.xgqy-LEu.js";import{a as bt}from"./erc-1155-ce97840a.browser.esm.Rfb7lelJ.js";import{E as Rt}from"./erc-20-dccc5c20.browser.esm.INZ86rFO.js";import{a as Ft}from"./erc-721-2c14d29e.browser.esm.vxx-oCT0.js";import{M as Dt,a as Mt,b as It}from"./marketplacev3-offers-ffe54eab.browser.esm.g3ZfGxV4.js";import"./jsx-runtime.7BJwlAz-.js";import"./index.9orYzNvn.js";import"./tokens.VZm6ve4Q.js";import"./index.JdUBUp0J.js";import"./setErc20Allowance-832742d0.browser.esm.cmmLqgE5.js";import"./QueryParams-c7566bb2.browser.esm.w93UYVZa.js";import"./drop-claim-conditions-b44061c8.browser.esm.tvR9Lu8Z.js";import"./cleanCurrencyAddress-f70c3199.browser.esm.mMPnJyP6.js";import"./marketplace-fbc507f1.browser.esm.QsF6NFph.js";let u=function(m){return m[m.None=0]="None",m[m.AddAdmin=1]="AddAdmin",m[m.RemoveAdmin=2]="RemoveAdmin",m}({});const x={startDate:g.from(0),expirationDate:g.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},M=E.object({startDate:K,expirationDate:$,nativeTokenLimitPerTransaction:it.default(0),approvedCallTargets:E.union([E.array(H),E.literal("*")])}),Nt=E.array(E.object({signer:H,makeAdmin:E.boolean(),permissions:M})),Lt=[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],kt=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];class Ot{featureName=h.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}hasDuplicateSigners(t){const e={},r=t.map(a=>a.signer);for(const a of r)if(!e[a])e[a]=!0;else return!0;return!1}parseSignerPermissionsStruct(t){return{startDate:new Date(parseInt(t.startTimestamp.toString())*1e3),expirationDate:new Date(parseInt(t.endTimestamp.toString())*1e3),nativeTokenLimitPerTransaction:g.from(t.nativeTokenLimitPerTransaction),approvedCallTargets:t.approvedTargets}}async sendSignerPermissionRequest(t,e,r){if(d(this.contractWrapper,"AccountPermissionsV1")){if(r===u.AddAdmin||r===u.RemoveAdmin)return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAdmin",args:[t,r===u.AddAdmin]});{const{payload:s,signature:o}=await this.generateLegacyPayload(t,e);return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[s,o]})}}const{payload:a,signature:n}=await this.generatePayload(t,e,r);return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[a,n]})}async generatePayload(t,e,r){const a={signer:t,isAdmin:r.valueOf(),approvedTargets:e.approvedCallTargets==="*"?[nt]:e.approvedCallTargets,nativeTokenLimitPerTransaction:U(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:g.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:V(void 0)},n=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();v(s);const o=await this.contractWrapper.signTypedData(s,{name:"Account",version:"1",chainId:n,verifyingContract:this.getAddress()},{SignerPermissionRequest:kt},a);return{payload:a,signature:o}}async generateLegacyPayload(t,e){if(e.approvedCallTargets==="*")throw new Error("Wildcard call targets are not supported on legacy account permissions contract, please deploy an updated contract factory.");const r={signer:t,approvedTargets:e.approvedCallTargets,nativeTokenLimitPerTransaction:U(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:g.from(Math.floor(new Date(Date.now()+1e3*60*60*24*365*10).getTime()/1e3)),uid:V(void 0)},a=await this.contractWrapper.getChainID(),n=this.contractWrapper.getSigner();v(n);const s=await this.contractWrapper.signTypedData(n,{name:"Account",version:"1",chainId:a,verifyingContract:this.getAddress()},{SignerPermissionRequest:Lt},r);return{payload:r,signature:s}}async isAdmin(t){const e=await f(t);return await this.contractWrapper.read("isAdmin",[e])}async isSigner(t){const e=await f(t);return await this.contractWrapper.read("isActiveSigner",[e])}async getAllAdmins(){return await this.contractWrapper.read("getAllAdmins",[])}async getAllSigners(){const t=await this.contractWrapper.read("getAllActiveSigners",[]);return await Promise.all(t.map(async e=>{const r=e.signer,a=this.parseSignerPermissionsStruct(e);return{signer:r,permissions:a}}))}async getAllAdminsAndSigners(){const e=(await this.getAllAdmins()).map(a=>({isAdmin:!0,signer:a,permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:g.from(0),approvedCallTargets:[]}})),r=await this.getAllSigners();return[...e,...r]}grantAdminPermissions=p(async t=>{const e=await f(t);return await this.sendSignerPermissionRequest(e,x,u.AddAdmin)});revokeAdminPermissions=p(async t=>{const e=await f(t);return await this.sendSignerPermissionRequest(e,x,u.RemoveAdmin)});grantPermissions=p(async(t,e)=>{const r=await f(t),a=await M.parseAsync(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot grant permissions to an existing admin.");if(await this.isSigner(r))throw new Error("Signer already has permissions. Cannot grant permissions to an existing signer. You can update permissions using `updatePermissions`.");return await this.sendSignerPermissionRequest(r,a,u.None)});updatePermissions=p(async(t,e)=>{const r=await f(t),a=await M.parseAsync(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot update permissions of an existing admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(r,a,u.None)});revokeAccess=p(async t=>{const e=await f(t);if(await this.isAdmin(e))throw new Error("Signer is already an admin. Cannot revoke permissions of an admin.");if(!await this.isSigner(e))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(e,{startDate:g.from(0),expirationDate:g.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},u.None)});approveTargetForSigner=p(async(t,e)=>{const r=await f(t),a=await f(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(n.approvedTargets.includes(e))throw new Error("Target is already approved");const s=[...n.approvedTargets,a];return await this.sendSignerPermissionRequest(r,{startDate:g.from(n.startTimestamp),expirationDate:g.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},u.None)});disapproveTargetForSigner=p(async(t,e)=>{const r=await f(t),a=await f(e);if(await this.isAdmin(r))throw new Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw new Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");const n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(!n.approvedTargets.includes(a))throw new Error("Target is currently not approved");const s=n.approvedTargets.filter(o=>q(o)!==q(a));return await this.sendSignerPermissionRequest(r,{startDate:g.from(n.startTimestamp),expirationDate:g.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},u.None)});resetAllPermissions=p(async t=>{const e=await Nt.parseAsync(t);if(this.hasDuplicateSigners(e))throw new Error("Duplicate signers found in input.");const r=[],a=[],n=[],s=await this.getAllAdmins(),o=e.filter(i=>i.makeAdmin).map(i=>i.signer);s.forEach(async i=>{if(!o.includes(i)){const W=(await this.sendSignerPermissionRequest(i,x,u.RemoveAdmin)).encode();r.push(W)}});const y=await this.getAllSigners(),T=e.filter(i=>!i.makeAdmin).map(i=>i.signer);await Promise.all(y.map(async i=>{if(!T.includes(i.signer)){const W=(await this.sendSignerPermissionRequest(i.signer,x,u.None)).encode();n.push(W)}}));for(const i of e)if(i.makeAdmin)(await this.sendSignerPermissionRequest(i.signer,x,u.AddAdmin)).encode();else{const W=(await this.sendSignerPermissionRequest(i.signer,i.permissions,u.None)).encode();a.push(W)}const w=[];return r.forEach(i=>{w.push(i)}),n.forEach(i=>{w.push(i)}),a.forEach(i=>{w.push(i)}),l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[w]})})}class _t{featureName=R.name;constructor(t){this.contractWrapper=t,this.accountPermissions=this.detectAccountPermissions()}detectAccountPermissions(){if(d(this.contractWrapper,"AccountPermissions")||d(this.contractWrapper,"AccountPermissionsV1"))return new Ot(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async isAdmin(t){return c(this.accountPermissions,h).isAdmin(t)}async isSigner(t){return c(this.accountPermissions,h).isSigner(t)}async getAllAdmins(){return c(this.accountPermissions,h).getAllAdmins()}async getAllSigners(){return c(this.accountPermissions,h).getAllSigners()}async getAllAdminsAndSigners(){return c(this.accountPermissions,h).getAllAdminsAndSigners()}grantAdminPermissions=p(async t=>c(this.accountPermissions,h).grantAdminPermissions.prepare(t));revokeAdminPermissions=p(async t=>c(this.accountPermissions,h).revokeAdminPermissions.prepare(t));grantPermissions=p(async(t,e)=>c(this.accountPermissions,h).grantPermissions.prepare(t,e));updatePermissions=p(async(t,e)=>c(this.accountPermissions,h).updatePermissions.prepare(t,e));revokeAccess=p(async t=>c(this.accountPermissions,h).revokeAccess.prepare(t));approveTargetForSigner=p(async(t,e)=>c(this.accountPermissions,h).approveTargetForSigner.prepare(t,e));disapproveTargetForSigner=p(async(t,e)=>c(this.accountPermissions,h).disapproveTargetForSigner.prepare(t,e));resetAllPermissions=p(async t=>c(this.accountPermissions,h).resetAllPermissions.prepare(t))}class Ut{featureName=F.name;constructor(t){this.contractWrapper=t,this.events=new Y(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async predictAccountAddress(t,e){let r=N("");return e&&(r=e),this.contractWrapper.read("getAddress",[t,r])}async getAssociatedAccounts(t){return this.contractWrapper.read("getAccountsOfSigner",[t])}async getAllAccounts(){return await this.contractWrapper.read("getAllAccounts",[])}async isAccountDeployed(t,e){const r=await this.predictAccountAddress(t,e);return z(r,this.contractWrapper.getProvider())}createAccount=p(async(t,e)=>{if(await this.isAccountDeployed(t,e))throw new Error(`Account already deployed for admin: ${t}`);let r=N("");return e&&(r=e),l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAccount",args:[t,r],parse:a=>({address:this.contractWrapper.parseLogs("AccountCreated",a?.logs)[0].args.account,receipt:a})})})}function qt(m,t){const r=A.parse(m||[]).filter(n=>n.type==="event"),a=[];for(const n of r){const s=st(n.name,t,"events");a.push({inputs:n.inputs||[],outputs:n.outputs||[],name:n.name||"unknown",comment:s})}return a}class Vt{constructor(t,e){this.contractWrapper=t,this.storage=e}async get(){return this._cachedMetadata?this._cachedMetadata:(this._cachedMetadata=await S(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options),this._cachedMetadata)}async extractSources(){const t=await this.get();return Q(t,this.storage)}async extractFunctions(){let t;try{t=await this.get()}catch{}return X(A.parse(this.contractWrapper.abi),t?.metadata)}async extractEvents(){let t;try{t=await this.get()}catch{}return qt(A.parse(this.contractWrapper.abi),t?.metadata)}}class Yt{featureName=D.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.readContract.address}async getAll(){return await this.contractWrapper.readContract.getAllExtensions()}async get(t){return await this.contractWrapper.readContract.getExtension(t)}async getExtensionAddress(t){return(await this.get(t)).metadata.implementation}async getAllFunctions(t){return(await this.get(t)).functions}async getExtensionForFunction(t){let e=t.functionSelector;return e||(v(t.functionSignature),e=J(t.functionSignature).substring(0,10)),await this.contractWrapper.readContract.getMetadataForFunction(e)}async getExtensionAddressForFunction(t){return(await this.getExtensionForFunction(t)).implementation}add=p(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionAdded",e.logs).length<1)throw new Error("No ExtensionAdded event found");const a=t.extensionAbi?A.parse(t.extensionAbi):(await S(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForAdd(a,t.extension),s=L([A.parse(this.contractWrapper.abi),n]);return this.contractWrapper.updateAbi(s),e}}));addDeployed=p(async t=>{let e=t.extensionAbi;e||(e=(await S(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),v(e);let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await k.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=O(A.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.add.prepare({extension:n,extensionAbi:e})});addPublished=p(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||_,e);return this.addDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});replace=p(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"replaceExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionReplaced",e.logs).length<1)throw new Error("No ExtensionReplaced event found");const a=t.extensionAbi?A.parse(t.extensionAbi):(await S(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,n=this.filterAbiForRemove(A.parse(this.contractWrapper.abi),a),s=this.filterAbiForAdd(a,t.extension),o=L([n,s]);return this.contractWrapper.updateAbi(o),e}}));replaceDeployed=p(async t=>{let e=t.extensionAbi;e||(e=(await S(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),v(e);let r="";if(t.extensionMetadata)if(typeof t.extensionMetadata=="string")r=t.extensionMetadata;else{const s=await k.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(s)}const a=O(A.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.replace.prepare({extension:n,extensionAbi:e})});replacePublished=p(async t=>{const e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||_,e);return this.replaceDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});remove=p(async t=>{const e=await this.getExtensionAddress(t.extensionName);return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"removeExtension",args:[t.extensionName],parse:async r=>{if(this.contractWrapper.parseLogs("ExtensionRemoved",r.logs).length<1)throw new Error("No ExtensionRemoved event found");const n=(await S(e,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,s=this.filterAbiForRemove(A.parse(this.contractWrapper.abi),n);return this.contractWrapper.updateAbi(s),r}})});filterAbiForAdd(t,e){const r=new P(t),a=e.functions.map(s=>s.functionSelector);return t.filter(s=>{const o=Object.values(new P([s]).functions);if(o.length===0)return!1;const y=r.getSighash(o[0]);return a.includes(y)})}filterAbiForRemove(t,e){const r=new P(t),a=new P(e),n=Object.values(a.functions).map(o=>a.getSighash(o));return t.filter(o=>{const y=Object.values(new P([o]).functions);if(y.length===0)return!1;const T=r.getSighash(y[0]);return!n.includes(T)})}async deployExtension(t,e){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:"latest";const a=await tt(e,t,r,this.contractWrapper.storage,this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),n=await et(a.metadataUri,this.contractWrapper.storage,this.contractWrapper.getProvider(),"",this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),s=n.find(i=>i.type==="implementation")?.transaction.predictedAddress,o=n.filter(i=>i.transaction.data&&i.transaction.data.length>0),y=o.filter(i=>i.type!=="infra").map(i=>i.transaction),T=o.filter(i=>i.type==="infra").map(i=>i.transaction),w=this.contractWrapper.getSigner();v(w),await rt(w,T,{});for(const i of y)try{await at(w,i)}catch(W){console.debug(`Error deploying contract at ${i.predictedAddress}`,W?.message)}return{deployedExtensionAddress:s,extensionMetadata:a.metadataUri}}}class Bt{featureName=B.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC20",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(o=>({recipient:o.args.recipient,amount:o.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class jt{featureName=j.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC721",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(o=>({recipient:o.args.recipient,tokenId:o.args.tokenId.toNumber()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class Gt{featureName=G.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=p(async(t,e,r)=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC1155",args:[t,e,r],parse:a=>{const s=this.contractWrapper.parseLogs("AirdropFailed",a.logs).map(o=>({recipient:o.args.recipient,tokenId:o.args.tokenId.toNumber(),amount:o.args.amount.toString()}));return{successfulDropCount:r.length-s.length,failedDropCount:s.length,failedDrops:s}}}))}class ge{get abi(){return A.parse(this.contractWrapper.abi||[])}get royalties(){return c(this.detectRoyalties(),dt)}get roles(){return c(this.detectRoles(),mt)}get sales(){return c(this.detectPrimarySales(),ut)}get platformFees(){return c(this.detectPlatformFees(),ht)}get owner(){return c(this.detectOwnable(),gt)}get erc20(){return c(this.detectErc20(),lt)}get erc721(){return c(this.detectErc721(),ft)}get erc1155(){return c(this.detectErc1155(),At)}get app(){return c(this.detectApp(),yt)}get directListings(){return c(this.detectDirectListings(),wt)}get englishAuctions(){return c(this.detectEnglishAuctions(),Wt)}get offers(){return c(this.detectOffers(),Et)}get airdrop20(){return c(this.detectAirdrop20(),B)}get airdrop721(){return c(this.detectAirdrop721(),j)}get airdrop1155(){return c(this.detectAirdrop1155(),G)}get accountFactory(){return c(this.detectAccountFactory(),F)}get account(){return c(this.detectAccount(),R)}get extensions(){return c(this.detectBaseRouter(),D)}get chainId(){return this._chainId}constructor(t,e,r,a){let n=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{},s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new ot(t,e,r,n,a);this._chainId=s,this.storage=a,this.contractWrapper=o,this.events=new Y(this.contractWrapper),this.encoder=new ct(this.contractWrapper),this.interceptor=new St(this.contractWrapper),this.estimator=new Z(this.contractWrapper),this.publishedMetadata=new Vt(this.contractWrapper,this.storage),this.metadata=new C(this.contractWrapper,b,this.storage)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}prepare(t,e,r){return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}detectRoyalties(){if(d(this.contractWrapper,"Royalty")){const t=new C(this.contractWrapper,b,this.storage);return new vt(this.contractWrapper,t)}}detectRoles(){if(d(this.contractWrapper,"Permissions"))return new xt(this.contractWrapper,pt)}detectPrimarySales(){if(d(this.contractWrapper,"PrimarySale"))return new Ct(this.contractWrapper)}detectPlatformFees(){if(d(this.contractWrapper,"PlatformFee"))return new Pt(this.contractWrapper)}detectErc20(){if(d(this.contractWrapper,"ERC20"))return new Rt(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if(d(this.contractWrapper,"ERC721"))return new Ft(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if(d(this.contractWrapper,"ERC1155"))return new bt(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if(d(this.contractWrapper,"Ownable"))return new Tt(this.contractWrapper)}detectApp(){const t=new C(this.contractWrapper,b,this.storage);if(d(this.contractWrapper,"AppURI"))return new I(this.contractWrapper,t,this.storage);if(d(this.contractWrapper,"ContractMetadata"))return new I(this.contractWrapper,t,this.storage)}detectDirectListings(){if(d(this.contractWrapper,"DirectListings"))return new Dt(this.contractWrapper,this.storage)}detectEnglishAuctions(){if(d(this.contractWrapper,"EnglishAuctions"))return new Mt(this.contractWrapper,this.storage)}detectOffers(){if(d(this.contractWrapper,"Offers"))return new It(this.contractWrapper,this.storage)}detectBaseRouter(){if(d(this.contractWrapper,D.name))return new Yt(this.contractWrapper)}detectAirdrop20(){if(d(this.contractWrapper,"AirdropERC20"))return new Bt(this.contractWrapper)}detectAirdrop721(){if(d(this.contractWrapper,"AirdropERC721"))return new jt(this.contractWrapper)}detectAirdrop1155(){if(d(this.contractWrapper,"AirdropERC1155"))return new Gt(this.contractWrapper)}detectAccountFactory(){if(d(this.contractWrapper,F.name))return new Ut(this.contractWrapper)}detectAccount(){if(d(this.contractWrapper,R.name))return new _t(this.contractWrapper)}}export{ge as SmartContract};
